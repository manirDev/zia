/* Modern CSS Reset and Variables */
:root {
  /* Light Theme */
  --bg-primary: #ffffff;
  --bg-secondary: #f8fafc;
  --bg-tertiary: #f1f5f9;
  --text-primary: #0f172a;
  --text-secondary: #475569;
  --text-muted: #64748b;
  --border-color: #e2e8f0;
  --accent-color: #6366f1;
  --success-color: #10b981;
  --warning-color: #f59e0b;
  --error-color: #ef4444;

  /* Dark Theme */
  --dark-bg-primary: #0f172a;
  --dark-bg-secondary: #1e293b;
  --dark-bg-tertiary: #334155;
  --dark-text-primary: #f8fafc;
  --dark-text-secondary: #cbd5e1;
  --dark-text-muted: #94a3b8;
  --dark-border-color: #475569;
  --dark-accent-color: #818cf8;
}

[data-theme="dark"] {
  --bg-primary: var(--dark-bg-primary);
  --bg-secondary: var(--dark-bg-secondary);
  --bg-tertiary: var(--dark-bg-tertiary);
  --text-primary: var(--dark-text-primary);
  --text-secondary: var(--dark-text-secondary);
  --text-muted: var(--dark-text-muted);
  --border-color: var(--dark-border-color);
  --accent-color: var(--dark-accent-color);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
  background: var(--bg-primary);
  color: var(--text-primary);
  overflow: hidden;
}

/* App Container */
.app-container {
  height: 100vh;
  display: flex;
  flex-direction: column;
  background: var(--bg-primary);
}

/* Header */
.app-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.75rem 1.5rem;
  background: var(--bg-secondary);
  border-bottom: 1px solid var(--border-color);
  min-height: 60px;
}

.header-left {
  display: flex;
  align-items: center;
  gap: 2rem;
}

.logo {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.logo-icon {
  width: 32px;
  height: 32px;
  background: linear-gradient(135deg, #6366f1, #8b5cf6);
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: 700;
  font-size: 1.1rem;
}

.logo-text {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
}

.tabs {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.tab {
  padding: 0.5rem 1rem;
  background: var(--bg-tertiary);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  cursor: pointer;
  font-size: 0.875rem;
  color: var(--text-secondary);
  transition: all 0.2s ease;
}

.tab.active {
  background: var(--accent-color);
  color: white;
  border-color: var(--accent-color);
}

.tab:hover:not(.active) {
  background: var(--bg-primary);
}

.add-tab {
  width: 32px;
  height: 32px;
  border: 1px solid var(--border-color);
  background: var(--bg-tertiary);
  border-radius: 6px;
  cursor: pointer;
  color: var(--text-muted);
  font-size: 1.2rem;
  transition: all 0.2s ease;
}

.add-tab:hover {
  background: var(--bg-primary);
  color: var(--text-primary);
}

/* Header Center - Toolbar */
.header-center {
  flex: 1;
  display: flex;
  justify-content: center;
}

.toolbar {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.toggle-group {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

.toggle {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  font-size: 0.875rem;
  color: var(--text-secondary);
}

.toggle input {
  display: none;
}

.toggle-slider {
  width: 40px;
  height: 20px;
  background: var(--bg-tertiary);
  border: 1px solid var(--border-color);
  border-radius: 10px;
  position: relative;
  transition: all 0.2s ease;
}

.toggle-slider::before {
  content: "";
  position: absolute;
  width: 16px;
  height: 16px;
  background: white;
  border-radius: 50%;
  top: 1px;
  left: 1px;
  transition: all 0.2s ease;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.toggle input:checked + .toggle-slider {
  background: var(--accent-color);
  border-color: var(--accent-color);
}

.toggle input:checked + .toggle-slider::before {
  transform: translateX(20px);
}

/* Header Right */
.header-right {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.btn-icon {
  width: 36px;
  height: 36px;
  border: 1px solid var(--border-color);
  background: var(--bg-tertiary);
  border-radius: 8px;
  cursor: pointer;
  color: var(--text-secondary);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
}

.btn-icon:hover {
  background: var(--bg-primary);
  color: var(--text-primary);
}

.execute-btn {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  background: linear-gradient(135deg, #6366f1, #8b5cf6);
  color: white;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.875rem;
}

.execute-btn:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
}

/* Main Content */
.main-content {
  flex: 1;
  display: flex;
  min-height: 0;
}

/* Left Panel */
.left-panel {
  width: 60%;
  display: flex;
  flex-direction: column;
  border-right: 1px solid var(--border-color);
}

.panel-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 1.5rem;
  background: var(--bg-secondary);
  border-bottom: 1px solid var(--border-color);
}

.panel-header h3 {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-secondary);
}

.panel-actions {
  display: flex;
  gap: 0.5rem;
}

.btn-small {
  padding: 0.375rem 0.75rem;
  background: var(--bg-tertiary);
  border: 1px solid var(--border-color);
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.75rem;
  color: var(--text-secondary);
  transition: all 0.2s ease;
}

.btn-small:hover {
  background: var(--bg-primary);
  color: var(--text-primary);
}

#blocklyDiv {
  flex: 1;
  background: var(--bg-primary);
}

/* Examples Panel */
.examples-panel {
  background: var(--bg-secondary);
  border-top: 1px solid var(--border-color);
  padding: 1rem;
}

.examples-header {
  margin-bottom: 0.75rem;
}

.examples-header h4 {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-secondary);
}

.examples-list {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.example-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  background: var(--bg-tertiary);
  border: 1px solid var(--border-color);
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.75rem;
  color: var(--text-secondary);
  transition: all 0.2s ease;
}

.example-item:hover {
  background: var(--accent-color);
  color: white;
  border-color: var(--accent-color);
}

.example-icon {
  font-size: 0.875rem;
}

/* Right Panel */
.right-panel {
  width: 40%;
  display: flex;
  flex-direction: column;
  background: var(--bg-secondary);
}

/* Console */
.console-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 1.5rem;
  background: var(--bg-tertiary);
  border-bottom: 1px solid var(--border-color);
}

.console-title {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-secondary);
}

.console-actions {
  display: flex;
  gap: 0.5rem;
}

.console-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 0;
}

.output-area {
  flex: 1;
  padding: 1.5rem;
  background: var(--bg-primary);
  color: var(--text-primary);
  font-family: "JetBrains Mono", "SF Mono", "Monaco", "Inconsolata", monospace;
  font-size: 0.875rem;
  line-height: 1.6;
  overflow-y: auto;
  white-space: pre-wrap;
  border: none;
  outline: none;
}

/* Code Preview */
.code-preview {
  flex: 1;
  display: flex;
  flex-direction: column;
  border-top: 1px solid var(--border-color);
}

.code-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 1.5rem;
  background: var(--bg-tertiary);
  border-bottom: 1px solid var(--border-color);
}

.code-title {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-secondary);
}

.code-content {
  flex: 1;
  min-height: 0;
}

.code-area {
  width: 100%;
  height: 100%;
  padding: 1.5rem;
  background: var(--bg-primary);
  color: var(--text-primary);
  font-family: "JetBrains Mono", "SF Mono", "Monaco", "Inconsolata", monospace;
  font-size: 0.875rem;
  line-height: 1.6;
  overflow: auto;
  border: none;
  outline: none;
  white-space: pre;
}

/* Status Bar */
.status-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem 1.5rem;
  background: var(--bg-tertiary);
  border-top: 1px solid var(--border-color);
  font-size: 0.75rem;
  color: var(--text-muted);
}

.status-left,
.status-right {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.status-item {
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.status-dot {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: var(--text-muted);
}

.status-dot.ready {
  background: var(--success-color);
}

.status-link {
  color: var(--accent-color);
  text-decoration: none;
}

.status-link:hover {
  text-decoration: underline;
}

/* Scrollbars */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: var(--bg-tertiary);
}

::-webkit-scrollbar-thumb {
  background: var(--border-color);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--text-muted);
}

/* Responsive Design */
@media (max-width: 1024px) {
  .left-panel {
    width: 50%;
  }

  .right-panel {
    width: 50%;
  }

  .toggle-group {
    gap: 1rem;
  }

  .toggle-label {
    display: none;
  }
}

@media (max-width: 768px) {
  .header-center {
    display: none;
  }

  .left-panel {
    width: 100%;
  }

  .right-panel {
    display: none;
  }

  .main-content {
    flex-direction: column;
  }
}

/* Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in {
  animation: fadeIn 0.3s ease-out;
}

/* Syntax Highlighting for Code */
.code-area .keyword {
  color: #c792ea;
}

.code-area .string {
  color: #c3e88d;
}

.code-area .number {
  color: #f78c6c;
}

.code-area .comment {
  color: #546e7a;
  font-style: italic;
}

.code-area .function {
  color: #82aaff;
}

/* Blockly Dark Mode Integration */
[data-theme="dark"] .blocklyToolboxDiv {
  background-color: var(--bg-secondary) !important;
  border-right: 1px solid var(--border-color) !important;
}

[data-theme="dark"] .blocklyTreeLabel {
  color: var(--text-primary) !important;
  font-family: "Inter", sans-serif !important;
  font-weight: 500 !important;
}

[data-theme="dark"] .blocklyTreeSelected .blocklyTreeLabel {
  color: white !important;
  background-color: var(--accent-color) !important;
}

[data-theme="dark"] .blocklyFlyoutBackground {
  fill: var(--bg-tertiary) !important;
  fill-opacity: 0.95 !important;
}

[data-theme="dark"] .blocklyScrollbarBackground {
  fill: var(--bg-tertiary) !important;
}

[data-theme="dark"] .blocklyScrollbarHandle {
  fill: var(--border-color) !important;
}

[data-theme="dark"] .blocklyScrollbarHandle:hover {
  fill: var(--text-muted) !important;
}

[data-theme="dark"] .blocklyMainBackground {
  stroke: var(--border-color) !important;
}

[data-theme="dark"] .blocklyTreeIcon {
  color: var(--text-secondary) !important;
}

[data-theme="dark"] .blocklyTreeRow:hover {
  background-color: var(--bg-tertiary) !important;
}

[data-theme="dark"] .blocklyToolboxCategory {
  fill: var(--bg-secondary) !important;
}

[data-theme="dark"] .blocklyToolboxCategory:hover {
  fill: var(--bg-tertiary) !important;
}

/* Light mode Blockly adjustments */
[data-theme="light"] .blocklyToolboxDiv {
  background-color: var(--bg-secondary) !important;
  border-right: 1px solid var(--border-color) !important;
}

[data-theme="light"] .blocklyTreeLabel {
  color: var(--text-primary) !important;
  font-family: "Inter", sans-serif !important;
  font-weight: 500 !important;
}

[data-theme="light"] .blocklyTreeSelected .blocklyTreeLabel {
  color: white !important;
  background-color: var(--accent-color) !important;
}

/* Blockly workspace container styling */
#blocklyDiv {
  border-radius: 0 0 8px 8px;
  overflow: hidden;
}

/* Custom scrollbar for Blockly */
[data-theme="dark"] .blocklyScrollbarBackground {
  fill: var(--bg-tertiary) !important;
  fill-opacity: 0.8 !important;
}

[data-theme="dark"] .blocklyScrollbarHandle {
  fill: var(--border-color) !important;
  fill-opacity: 0.8 !important;
}

/* Blockly context menu dark mode */
[data-theme="dark"] .blocklyContextMenu {
  background-color: var(--bg-secondary) !important;
  border: 1px solid var(--border-color) !important;
  border-radius: 8px !important;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
}

[data-theme="dark"] .blocklyMenuItem {
  color: var(--text-primary) !important;
  background-color: transparent !important;
}

[data-theme="dark"] .blocklyMenuItem:hover {
  background-color: var(--bg-tertiary) !important;
}

[data-theme="dark"] .blocklyMenuItemDisabled {
  color: var(--text-muted) !important;
}

/* Blockly dropdown and field styling */
[data-theme="dark"] .blocklyDropdownMenu {
  background-color: var(--bg-secondary) !important;
  border: 1px solid var(--border-color) !important;
  border-radius: 6px !important;
}

[data-theme="dark"] .blocklyDropdownMenu .blocklyMenuItem {
  color: var(--text-primary) !important;
}

[data-theme="dark"] .blocklyDropdownMenu .blocklyMenuItem:hover {
  background-color: var(--bg-tertiary) !important;
}

/* Blockly text input fields */
[data-theme="dark"] .blocklyHtmlInput {
  background-color: var(--bg-secondary) !important;
  border: 1px solid var(--border-color) !important;
  color: var(--text-primary) !important;
  border-radius: 4px !important;
}

/* Blockly variable and function dialogs */
[data-theme="dark"] .blocklyModalBackground {
  background-color: rgba(15, 23, 42, 0.8) !important;
}

[data-theme="dark"] .blocklyDialog {
  background-color: var(--bg-secondary) !important;
  border: 1px solid var(--border-color) !important;
  border-radius: 12px !important;
  color: var(--text-primary) !important;
}

[data-theme="dark"] .blocklyDialog input {
  background-color: var(--bg-tertiary) !important;
  border: 1px solid var(--border-color) !important;
  color: var(--text-primary) !important;
  border-radius: 6px !important;
}

[data-theme="dark"] .blocklyDialog button {
  background-color: var(--accent-color) !important;
  border: none !important;
  color: white !important;
  border-radius: 6px !important;
  padding: 8px 16px !important;
  font-weight: 500 !important;
}

[data-theme="dark"] .blocklyDialog button:hover {
  background-color: var(--dark-accent-color) !important;
}

/* Blockly mutator dialog */
[data-theme="dark"] .blocklyMutatorBackground {
  background-color: var(--bg-primary) !important;
  border: 1px solid var(--border-color) !important;
  border-radius: 8px !important;
}

/* Blockly tooltip */
[data-theme="dark"] .blocklyTooltipDiv {
  background-color: var(--bg-tertiary) !important;
  border: 1px solid var(--border-color) !important;
  color: var(--text-primary) !important;
  border-radius: 6px !important;
  font-family: "Inter", sans-serif !important;
  font-size: 12px !important;
}

/* Blockly workspace grid */
[data-theme="dark"] .blocklyMainBackground {
  stroke: var(--border-color) !important;
  stroke-width: 1 !important;
  fill: var(--bg-primary) !important;
}

/* Ensure proper contrast for block text */
/* Remove this general rule that affects all block text */
/*
[data-theme="dark"] .blocklyText {
  fill: white !important;
  font-family: "Inter", sans-serif !important;
  font-weight: 500 !important;
}
*/

[data-theme="dark"] .blocklyEditableText > .blocklyText {
  fill: white !important;
}

/* Blockly field styling */
[data-theme="dark"] .blocklyFieldTextInput {
  fill: white !important;
}

/* Improve visibility of connection indicators */
[data-theme="dark"] .blocklyHighlightedConnectionPath {
  stroke: var(--accent-color) !important;
  stroke-width: 3px !important;
}

/* ===== BLOCK INPUT FIELDS DARK MODE FIXES ===== */

/* Only target input field backgrounds - not block labels */
[data-theme="dark"] .blocklyFieldRectangularDropdown,
[data-theme="dark"] .blocklyFieldTextInput,
[data-theme="dark"] .blocklyFieldNumber,
[data-theme="dark"] .blocklyFieldVariable,
[data-theme="dark"] .blocklyFieldDropdown {
  fill: #ffffff !important; /* Pure white background */
  stroke: #d1d5db !important; /* Light gray border */
  stroke-width: 1px !important;
  rx: 12 !important; /* More rounded for oval shape */
  ry: 12 !important;
}

/* Only target text INSIDE input fields - not block labels */
[data-theme="dark"] .blocklyFieldRectangularDropdown > .blocklyText,
[data-theme="dark"] .blocklyFieldTextInput > .blocklyText,
[data-theme="dark"] .blocklyFieldNumber > .blocklyText,
[data-theme="dark"] .blocklyFieldVariable > .blocklyText,
[data-theme="dark"] .blocklyFieldDropdown > .blocklyText {
  fill: #1f2937 !important; /* Dark gray text only for input fields */
  font-family: "Inter", sans-serif !important;
  font-weight: 600 !important;
  font-size: 13px !important;
}

/* Variable dropdown fields */
[data-theme="dark"] .blocklyFieldVariable,
[data-theme="dark"] .blocklyFieldDropdown,
[data-theme="dark"] .blocklyFieldRectangularDropdown {
  fill: #ffffff !important;
  stroke: #9ca3af !important;
  stroke-width: 1.5px !important;
  rx: 8 !important;
  ry: 8 !important;
}

/* Number and text input fields - perfect ovals */
[data-theme="dark"] .blocklyFieldNumber,
[data-theme="dark"] .blocklyFieldTextInput {
  fill: #ffffff !important;
  stroke: #e5e7eb !important;
  stroke-width: 1px !important;
  rx: 14 !important;
  ry: 14 !important;
}

/* Focus states */
[data-theme="dark"] .blocklyFieldTextInput.blocklyFocused,
[data-theme="dark"] .blocklyFieldNumber.blocklyFocused,
[data-theme="dark"] .blocklyFieldVariable.blocklyFocused,
[data-theme="dark"] .blocklyFieldDropdown.blocklyFocused {
  fill: #ffffff !important;
  stroke: #3b82f6 !important;
  stroke-width: 2px !important;
  filter: drop-shadow(0 0 6px rgba(59, 130, 246, 0.3)) !important;
}

[data-theme="dark"] .blocklyFieldTextInput.blocklyFocused > .blocklyText,
[data-theme="dark"] .blocklyFieldNumber.blocklyFocused > .blocklyText,
[data-theme="dark"] .blocklyFieldVariable.blocklyFocused > .blocklyText,
[data-theme="dark"] .blocklyFieldDropdown.blocklyFocused > .blocklyText {
  fill: #1f2937 !important;
  font-weight: 700 !important;
}

/* Hover effects */
[data-theme="dark"] .blocklyFieldRectangularDropdown:hover,
[data-theme="dark"] .blocklyFieldTextInput:hover,
[data-theme="dark"] .blocklyFieldNumber:hover,
[data-theme="dark"] .blocklyFieldVariable:hover,
[data-theme="dark"] .blocklyFieldDropdown:hover {
  fill: #f9fafb !important;
  stroke: #6b7280 !important;
  stroke-width: 1.5px !important;
}

/* Dropdown arrows - make them clearly visible */
[data-theme="dark"] .blocklyArrowTop {
  fill: #4b5563 !important; /* Medium gray */
}

[data-theme="dark"] .blocklyArrowBottom {
  fill: #6b7280 !important; /* Slightly lighter gray */
}

/* HTML input fields (when actively editing) */
[data-theme="dark"] .blocklyHtmlInput {
  background-color: #ffffff !important;
  border: 2px solid #3b82f6 !important; /* Blue border when editing */
  color: #1f2937 !important;
  border-radius: 12px !important;
  padding: 6px 12px !important;
  font-family: "Inter", sans-serif !important;
  font-weight: 600 !important;
  font-size: 13px !important;
}

/* Focus states - subtle blue glow */
[data-theme="dark"] .blocklyFieldTextInput.blocklyFocused,
[data-theme="dark"] .blocklyFieldNumber.blocklyFocused,
[data-theme="dark"] .blocklyFieldVariable.blocklyFocused,
[data-theme="dark"] .blocklyFieldDropdown.blocklyFocused {
  fill: #ffffff !important;
  stroke: #3b82f6 !important; /* Blue border when focused */
  stroke-width: 2px !important;
  filter: drop-shadow(0 0 6px rgba(59, 130, 246, 0.3)) !important;
}

[data-theme="dark"] .blocklyFieldTextInput.blocklyFocused .blocklyText,
[data-theme="dark"] .blocklyFieldNumber.blocklyFocused .blocklyText,
[data-theme="dark"] .blocklyFieldVariable.blocklyFocused .blocklyText,
[data-theme="dark"] .blocklyFieldDropdown.blocklyFocused .blocklyText {
  fill: #1f2937 !important;
  font-weight: 700 !important;
}

/* Hover effects - subtle highlight */
[data-theme="dark"] .blocklyFieldRectangularDropdown:hover,
[data-theme="dark"] .blocklyFieldTextInput:hover,
[data-theme="dark"] .blocklyFieldNumber:hover,
[data-theme="dark"] .blocklyFieldVariable:hover,
[data-theme="dark"] .blocklyFieldDropdown:hover {
  fill: #f9fafb !important; /* Very light gray on hover */
  stroke: #6b7280 !important;
  stroke-width: 1.5px !important;
}

/* Boolean/checkbox fields */
[data-theme="dark"] .blocklyFieldCheckbox {
  fill: #ffffff !important;
  stroke: #d1d5db !important;
  stroke-width: 1px !important;
  rx: 4 !important;
  ry: 4 !important;
}

[data-theme="dark"] .blocklyFieldCheckbox .blocklyText {
  fill: #1f2937 !important;
  font-weight: 600 !important;
}

/* Block connection highlights */
[data-theme="dark"] .blocklyConnectionHighlight {
  stroke: var(--accent-color) !important;
  stroke-width: 3px !important;
  fill: none !important;
}

/* Block insertion marker */
[data-theme="dark"] .blocklyInsertionMarker > .blocklyPath {
  fill: var(--accent-color) !important;
  fill-opacity: 0.2 !important;
  stroke: var(--accent-color) !important;
  stroke-width: 2px !important;
}

/* Block replacement marker */
[data-theme="dark"] .blocklyReplacementMarker > .blocklyPath {
  fill: var(--warning-color) !important;
  fill-opacity: 0.2 !important;
  stroke: var(--warning-color) !important;
  stroke-width: 2px !important;
}

/* Block selection glow */
[data-theme="dark"] .blocklySelected > .blocklyPath {
  stroke: var(--accent-color) !important;
  stroke-width: 3px !important;
  stroke-opacity: 0.8 !important;
}

/* Block drag preview */
[data-theme="dark"] .blocklyDragging {
  opacity: 0.8 !important;
}

[data-theme="dark"] .blocklyDragging > .blocklyPath {
  fill-opacity: 0.8 !important;
  stroke-opacity: 0.8 !important;
}

/* Block comment styling */
[data-theme="dark"] .blocklyCommentTextarea {
  background-color: #ffffff !important;
  border: 2px solid var(--border-color) !important;
  color: #0f172a !important;
  border-radius: 6px !important;
  font-family: "Inter", sans-serif !important;
  padding: 8px !important;
}

/* Block warning and error indicators */
[data-theme="dark"] .blocklyWarningBody {
  fill: var(--warning-color) !important;
  stroke: var(--warning-color) !important;
}

[data-theme="dark"] .blocklyErrorBody {
  fill: var(--error-color) !important;
  stroke: var(--error-color) !important;
}

/* Block mutator icon styling */
[data-theme="dark"] .blocklyMutatorIcon {
  fill: var(--text-secondary) !important;
}

[data-theme="dark"] .blocklyMutatorIcon:hover {
  fill: var(--accent-color) !important;
}

/* Block collapse/expand icon */
[data-theme="dark"] .blocklyMinimalBody {
  fill: var(--bg-tertiary) !important;
  stroke: var(--border-color) !important;
}

[data-theme="dark"] .blocklyCollapseIcon {
  fill: var(--text-secondary) !important;
}

[data-theme="dark"] .blocklyCollapseIcon:hover {
  fill: var(--accent-color) !important;
}

/* Connection socket styling */
[data-theme="dark"] .blocklyConnectionSocket {
  fill: var(--bg-tertiary) !important;
  stroke: var(--border-color) !important;
  stroke-width: 2px !important;
}

[data-theme="dark"] .blocklyConnectionSocket:hover {
  fill: var(--accent-color) !important;
  fill-opacity: 0.3 !important;
  stroke: var(--accent-color) !important;
}

/* Ensure all text in blocks is visible
[data-theme="dark"] .blocklyText {
  fill: white !important;
  font-family: "Inter", sans-serif !important;
  font-weight: 500 !important;
}
 */
 
/* But override for input fields to use dark text */
[data-theme="dark"] .blocklyFieldRectangularDropdown .blocklyText,
[data-theme="dark"] .blocklyFieldTextInput .blocklyText,
[data-theme="dark"] .blocklyFieldNumber .blocklyText,
[data-theme="dark"] .blocklyFieldVariable .blocklyText,
[data-theme="dark"] .blocklyFieldDropdown .blocklyText,
[data-theme="dark"] .blocklyFieldCheckbox .blocklyText {
  /* This overrides the general blocklyText rule above for input fields only */
}
